{"_id":"8UgXHb9ooOjr06B3","name":"turn_defeated_into_loot","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"for (let token of canvas.tokens.controlled) {\n    // Don't run this on PC tokens by mistake\n    if (token.actor.data.type === 'character') continue;\n\n    // Remove items that shouldn't be lootable\n    let itemsToDelete = token.actor.items\n      .filter((item) => {\n        // Weapons are fine, unless they're natural.\n        if (item.type == 'weapon') {\n          return item.data.data.weaponType == 'natural';\n        }\n        // Equipment's fine, unless it's natural armor.\n        if (item.type == 'equipment') {\n          return item.data.data.armor.type == 'natural';\n        }\n        // Item type blocklist.\n        return ['class', 'spell', 'feat'].includes(item.type);\n      })\n      .map((item) => item.id);\n\n    await token.document.actor.deleteEmbeddedDocuments('Item', itemsToDelete);\n\n    // Change sheet to lootable, and give players permissions.\n    let newActorData = {\n      flags: {\n        core: {\n          sheetClass: 'dnd5e.LootSheet5eNPC',\n        },\n        lootsheetnpc5e: {\n          lootsheettype: 'Loot',\n        },\n      },\n    };\n\n    let lootingUsers = game.users\n      // Limit selection to Players and Trusted Players\n      .filter((user) => {\n        return user.role >= 1 && user.role <= 2;\n      });\n\n    // This section is a workaround for the fact that the LootSheetNPC module\n    // currently uses an older currency schema, compared to current 5e expectations.\n    // Need to convert the actor's currency data to the LS schema here to avoid\n    // breakage. If there is already currency on the actor, it is retained.\n\n    if (typeof token.actor.data.data.currency.cp === 'number') {\n      let oldCurrencyData = token.actor.data.data.currency;\n      newActorData['data.currency'] = {\n        cp: { value: oldCurrencyData.cp },\n        ep: { value: oldCurrencyData.ep },\n        gp: { value: oldCurrencyData.gp },\n        pp: { value: oldCurrencyData.pp },\n        sp: { value: oldCurrencyData.sp },\n      };\n    }\n\n    await token.document.actor.update(newActorData);\n\n    // Update permissions to level 2, so players can loot\n    let permissions = {};\n    Object.assign(permissions, token.actor.data.permission);\n    lootingUsers.forEach((user) => {\n      permissions[user.data._id] = 2;\n    });\n\n    // If using Combat Utility Belt, need to remove any of its condition overlays\n    // before we can add the chest icon overlay.\n    if (game.modules.get('combat-utility-belt')?.active) {\n      await game.cub.removeAllConditions(token);\n    }\n\n    await token.document.update({\n      overlayEffect: 'icons/svg/chest.svg',\n      actorData: {\n        actor: {\n          flags: {\n            loot: {\n              playersPermission: 2,\n            },\n          },\n        },\n        permission: permissions,\n      },\n    });\n  }","folder":null,"sort":0,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":"cjj7qz3ak356ozx8"}}}
{"_id":"BSUjXhAm5kSuQtuJ","name":"Pause Game","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"game.togglePause(true, true)","folder":null,"sort":0,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"MTU3YWIxNGEwNWY5","name":"Initiative","permission":{"default":2,"ODY1ZmU3OWIzNzY2":3},"type":"chat","sort":0,"flags":{},"scope":"global","command":"Initiative: @{selected|npcd_name}\n/roll 1d20 + @{selected|npcd_dex_mod} &{tracker}","author":"ODY1ZmU3OWIzNzY2","img":"modules/lmop-shared/macros/roll20_macro.png","actorIds":[]}
{"_id":"Scy7Of1fQMxf6Vga","name":"Skeletons Appear","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"const update = game.actors.getName(\"Skeleton\").getActiveTokens().map(t => ({_id: t.id, hidden: false}));\ncanvas.scene.updateEmbeddedDocuments(\"Token\", update);","folder":null,"sort":100001,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"TkTj0SiNr5ZIYADs","name":"!custom","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"(async ()=>{\n    console.log(\"starting\");\n    let processed = [];\n    for(let iToken of canvas.tokens.placeables)\n    {\n        if (!iToken.data)\n        {\n            console.log(\"error: no token.data\");\n            continue;\n        }\n        if (!iToken.data.name)\n        {\n            console.log(\"error: no token.data.name\");\n            continue;\n        }\n        if (processed.indexOf(iToken.name) >= 0)\n        {\n            console.log(\"skipping \" + iToken.name);\n            continue;\n        }\n        processed.push(iToken.name)\n        console.log(\"token = \" + iToken.data.name);\n        a = game.actors.getName(iToken.name);\n        if (a == null)\n        {\n            console.log(\"no game actor found for \" + iToken.name);\n            continue;\n        }\n        updateTokensForActorByName(iToken.name);\n    }\n    console.log(\"ending\");\n})();\n\nfunction updateTokensForActorByName(actorName)\n{\n    a = game.actors.getName(actorName);\n    const update = a.getActiveTokens().map(t => {\n        if (t.name == a.data.token.name)\n        {\n            result = Object.assign({}, a.data.token);\n            result._id = t.id;\n        }\n        else\n        {\n            result = {_id : t.id};\n        }\n        return result;\n    });\n    canvas.scene.updateEmbeddedDocuments(\"Token\", update);\n}","folder":null,"sort":0,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"Z1PVcJrfjEqwC5zZ","name":"Remove Top Bar","permission":{"default":0,"ZjdmMWEyMmE2NzVk":3},"type":"script","folder":null,"sort":100000,"flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"(async ()=>{\r\n   console.log(\"starting\");\r\n   for(let token of canvas.tokens.placeables)\r\n   {\r\n      if (!token.data)\r\n      {\r\n         console.log(\"error: no token.data\");\r\n         continue;\r\n      }\r\n      if (!token.data.name)\r\n      {\r\n         console.log(\"error: no token.data.name\");\r\n         continue;\r\n      }\r\n      console.log(\"token = \" + token.data.name);\r\n      await token.update({ 'bar2.attribute' : 'None' });\r\n      await token.update({ 'bar1.attribute' : 'attributes.hp' });\r\n   }\r\n   console.log(\"ending\");\r\n})();\r\n\r\n","author":"ZjdmMWEyMmE2NzVk","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"Zkyhd4OHoorlpqks","name":"Redbrand Trapped Hallway","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"game.togglePause(true, true)\nlet tile = canvas.scene.data.tiles.get(\"ZTE0NDkyNjlmYWQ1\")\ntile.update({\"hidden\" : false})","folder":null,"sort":100001,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"ugYsDBEsytMqZZKH","name":"Goblin Ambush","type":"script","author":"ODY1ZmU3OWIzNzY2","img":"icons/svg/dice-target.svg","scope":"global","command":"(async ()=>{\n    console.log(\"starting\");\n    let found = false;\n    let update = [];\n    for(let iToken of canvas.tokens.placeables)\n    {\n        if (!iToken.data)\n        {\n            console.log(\"error: no token.data\");\n            continue;\n        }\n        if (!iToken.data.name)\n        {\n            console.log(\"error: no token.data.name\");\n            continue;\n        }\n        if (iToken.data.name != \"Goblin\")\n        {\n            continue;\n        }\n        if (!iToken.data.hidden)\n        {\n            continue;\n        }\n        console.log(\"token = \" + iToken.data.name);\n        found = true;\n        update.push(iToken);\n    }\n    if (found)\n    {\n        game.togglePause(true, true)\n        canvas.scene.updateEmbeddedDocuments(\"Token\", update.map(t => ({_id: t.id, hidden: false})));\n    }\n    console.log(\"ending\");\n})();","folder":null,"sort":0,"permission":{"default":0,"ODY1ZmU3OWIzNzY2":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
